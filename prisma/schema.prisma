generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_DATABASE_URL")
}

model Client {
  id                  Int                @id @default(autoincrement())
  name                String
  url                 String?
  cron                String?
  clerkOrganizationId String?            @unique
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @default(now()) @updatedAt
  audits              Audit[]
  auditIssues         AuditIssue[]
  memberships         ClientMembership[]
  crawls              Crawl[]
  hreflangLinks       HreflangLink[]
  internalLinks       InternalLink[]
  urls                Urls[]
}

model ClientMembership {
  id          Int        @id @default(autoincrement())
  clientId    Int
  clerkUserId String
  role        ClientRole @default(CLIENT_MEMBER)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  client      Client     @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@unique([clientId, clerkUserId])
  @@index([clerkUserId])
}

model User {
  id          Int        @id @default(autoincrement())
  clerkUserId String     @unique
  globalRole  GlobalRole @default(NONE)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([clerkUserId])
}

model Crawl {
  id            Int            @id @default(autoincrement())
  clientId      Int
  url           String
  createdAt     DateTime       @default(now())
  state         CrawlState     @default(STARTED)
  audit         Audit?
  client        Client         @relation(fields: [clientId], references: [id])
  hreflangLinks HreflangLink[]
  internalLinks InternalLink[]
  urls          Urls[]
}

model Urls {
  id                         Int            @id @default(autoincrement())
  clientId                   Int
  crawlId                    Int?
  url                        String
  status                     Int?
  originalStatus             String?
  redirectTarget             String?
  canonical                  String?
  canonicalStatus            Int?
  isSelfReferencingCanonical Boolean        @default(false)
  isCanonicalised            Boolean        @default(false)
  metaTitle                  String?
  metaDescription            String?
  h1                         String[]
  h2                         String[]
  h3                         String[]
  h4                         String[]
  h5                         String[]
  h6                         String[]
  createdAt                  DateTime       @default(now())
  lastModified               DateTime?
  isPagination               Boolean        @default(false)
  paginationNext             String?
  paginationPrev             String?
  auditIssues                AuditIssue[]
  hreflangLinks              HreflangLink[] @relation("HreflangSource")
  hreflangTargets            HreflangLink[] @relation("HreflangTarget")
  sourceLinks                InternalLink[] @relation("SourceLinks")
  targetLinks                InternalLink[] @relation("TargetLinks")
  client                     Client         @relation(fields: [clientId], references: [id])
  crawl                      Crawl?         @relation(fields: [crawlId], references: [id])

  @@unique([crawlId, url])
}

model Audit {
  id                        Int          @id @default(autoincrement())
  crawlId                   Int          @unique
  clientId                  Int
  createdAt                 DateTime     @default(now())
  pages_missing_title       Int          @default(0)
  too_short_title           Int          @default(0)
  too_long_title            Int          @default(0)
  pages_missing_description Int          @default(0)
  too_short_description     Int          @default(0)
  too_long_description      Int          @default(0)
  pages_missing_h1          Int          @default(0)
  pages_with_multiple_h1s   Int          @default(0)
  pages_with_duplicate_h1s  Int          @default(0)
  pages_missing_h2          Int          @default(0)
  pages_with_multiple_h2s   Int          @default(0)
  pages_with_duplicate_h2s  Int          @default(0)
  pages_missing_h3          Int          @default(0)
  pages_with_multiple_h3s   Int          @default(0)
  pages_with_duplicate_h3s  Int          @default(0)
  pages_missing_h4          Int          @default(0)
  pages_with_multiple_h4s   Int          @default(0)
  pages_with_duplicate_h4s  Int          @default(0)
  pages_missing_h5          Int          @default(0)
  pages_with_multiple_h5s   Int          @default(0)
  pages_with_duplicate_h5s  Int          @default(0)
  pages_missing_h6          Int          @default(0)
  pages_with_multiple_h6s   Int          @default(0)
  pages_with_duplicate_h6s  Int          @default(0)
  pages_200_response        Int          @default(0)
  pages_3xx_response        Int          @default(0)
  pages_4xx_response        Int          @default(0)
  pages_5xx_response        Int          @default(0)
  score                     Int?
  pages_canonicalised       Int          @default(0)
  pages_missing_canonical   Int          @default(0)
  
  // Internal Link Audits (Phase 2A)
  pages_orphaned                      Int @default(0)
  pages_with_broken_internal_links    Int @default(0)
  total_broken_internal_links         Int @default(0)
  pages_with_redirect_links           Int @default(0)
  total_redirect_internal_links       Int @default(0)
  total_orphaned_pages                Int @default(0)
  
  // Hreflang Audits (Phase 2A)
  pages_hreflang_missing_return_tag   Int @default(0)
  pages_hreflang_broken_links         Int @default(0)
  total_hreflang_broken_links         Int @default(0)
  total_hreflang_missing_return_tags  Int @default(0)
  pages_missing_hreflang_x_default    Int @default(0)
  pages_hreflang_missing_self_ref     Int @default(0)
  pages_with_hreflang                 Int @default(0)
  total_hreflang_links                Int @default(0)
  
  client                    Client       @relation(fields: [clientId], references: [id])
  crawl                     Crawl        @relation(fields: [crawlId], references: [id])
  issues                    AuditIssue[]
}

model AuditIssue {
  id        Int      @id @default(autoincrement())
  clientId  Int
  auditId   Int
  urlId     Int
  issueKey  String
  createdAt DateTime @default(now())
  audit     Audit    @relation(fields: [auditId], references: [id])
  client    Client   @relation(fields: [clientId], references: [id])
  url       Urls     @relation(fields: [urlId], references: [id])

  @@index([clientId])
  @@index([auditId])
  @@index([issueKey])
}

model InternalLink {
  id        Int      @id @default(autoincrement())
  sourceId  Int
  targetId  Int?
  targetUrl String
  clientId  Int
  crawlId   Int
  createdAt DateTime @default(now())
  follow    Boolean  @default(true)
  client    Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  crawl     Crawl    @relation(fields: [crawlId], references: [id], onDelete: Cascade)
  source    Urls     @relation("SourceLinks", fields: [sourceId], references: [id], onDelete: Cascade)
  target    Urls?    @relation("TargetLinks", fields: [targetId], references: [id], onDelete: Cascade)

  @@unique([sourceId, targetUrl, crawlId])
  @@index([clientId, crawlId])
  @@index([targetUrl])
  @@index([follow])
  @@index([sourceId])
  @@index([targetId])
}

model HreflangLink {
  id           Int      @id @default(autoincrement())
  clientId     Int
  crawlId      Int
  sourceId     Int
  targetUrl    String
  targetId     Int?
  hreflang     String
  hasReturnTag Boolean  @default(false)
  targetStatus Int?
  createdAt    DateTime @default(now())
  client       Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  crawl        Crawl    @relation(fields: [crawlId], references: [id], onDelete: Cascade)
  source       Urls     @relation("HreflangSource", fields: [sourceId], references: [id], onDelete: Cascade)
  target       Urls?    @relation("HreflangTarget", fields: [targetId], references: [id], onDelete: Cascade)

  @@unique([sourceId, hreflang, crawlId])
  @@index([clientId, crawlId])
  @@index([targetUrl])
  @@index([hreflang])
}

enum GlobalRole {
  NONE
  INTERNAL_ADMIN
}

enum ClientRole {
  INTERNAL_ADMIN
  CLIENT_ADMIN
  CLIENT_MEMBER
  AGENCY_ADMIN
  AGENCY_ANALYST
  CLIENT_VIEWER
}

enum CrawlState {
  STARTED
  ABORTED
  COMPLETED
}
